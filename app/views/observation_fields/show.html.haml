- content_for(:title) do
  = @title = t(:observation_field)+": #{@observation_field.name}"
- content_for(:extracss) do
  :css
    td.observations {width:80%;}
    td.observations.mini .observation {border-bottom: 0 transparent;}
    #allowed_values .badge { width: 100%; min-width: 22px; }
    #allowed_values .badge.current { background-color: #f85532; }
    #allowed_values .extra {display:none;}
    #allowed_values .count-col {width: 200px; text-align: left; padding-left: 10px;}
    #value-selector { margin-top: 25px; }
- content_for(:extrajs) do
  :javascript
    $(document).ready(function() {
      $('[class*=bold-]').boldId()
    })
.container
  .row
    .col-xs-12
      #pageheader
        #nav.clear
          .breadcrumbs
            - if @observation_field.editable_by?(current_user)
              %span.right
                = link_to t(:edit_field), edit_observation_field_path(@observation_field), :class => "ui description"
            = link_to t(:back_to_observation_fields), observation_fields_path, :class => "back crumb"
        %h2= @title
  .row
    .col-xs-12
      - unless @observation_field.description.blank?
        %p.description= h @observation_field.description
      .stacked
        .meta.ui
          %b=t :label_colon, label: t(:datatype)
          = h @observation_field.datatype
        - unless @observation_field.allowed_values.blank?
          .meta.ui
            %b=t :label_colon, label: t(:allowed_values)
            - allowed_values = @observation_field.allowed_values.split( "|" )
            - max_value_count = @value_counts.values.max
            %table#allowed_values
              - allowed_values.each_with_index do |v,i|
                - width_percent = @value_counts[v].to_f / ( max_value_count || 1) * 100
                %tr{:class => i >= 15 ? 'extra' : ''}
                  %td= v
                  %td.count-col
                    - if @value == v
                      = link_to @value_counts[v].to_i, url_for( value: nil ), class: "current badge", style: "width: #{width_percent}%", title: t(:used_x_times, count: @value_counts[v].to_i)
                    - else
                      = link_to @value_counts[v].to_i, url_for( value: v ), class: "badge #{@value == v ? "current" : "" }", style: "width: #{width_percent}%", title: t(:used_x_times, count: @value_counts[v].to_i)
              - if allowed_values.size > 15
                %tr
                  %td{ colspan: 2 }
                    = link_to_function t(:view_all), "$('#allowed_values .extra').show(); $(this).parents('li:first').hide()"
        .meta.ui.upstacked
          %b=t :label_colon, label: t( :created_by, gender: "observation_field" )
          = link_to user_image(@observation_field.user), @observation_field.user
          = link_to_user @observation_field.user
  .row
    .col-xs-12
      - if @observation_field.allowed_values.to_s.size > 0
        #value-selector.pull-right.meta
          %strong=t :label_colon, label: t(:values)
          = form_tag url_for, :class => "inline", :method => :get do
            = hidden_fields_for_params(:without => [:value, :utf8])
            = select_tag :value, options_for_select(@observation_field.allowed_values.split('|').unshift("any"), params[:value] || "any"), "data-autosubmit" => true
      %h3
        - if @value == "any"
          = t :observations_specifying_this_field
        - else
          = t :observations_specifying_this_field_with_value, value: @value
      - if @observations.blank?
        .meta.noresults
          = t :no_observations_yet
      - else
        %table.table
          %thead
            %tr
              %th= t :observation
              %th= @observation_field.name
          %tbody
            - for ofv in @observation_field_values
              %tr
                %td.mini.observations
                  = render "observations/cached_component", :observation => ofv.observation
                %td
                  = observation_field_value_for(ofv)
        = link_to "View more search options", observations_path( "field:#{@observation_field.normalized_name(escape: true)}" => (@value == 'any' ? '' : @value)), :rel => "nofollow", :class => "readmore"
      = will_paginate @observation_field_values
      = separator
      - unless @projects.blank?
        %h3=t :projects_using_this_field
        .column.span-24
          - @projects.each_with_index do |project, i|
            = render :partial => 'projects/project', :object => project, :locals => {:last => i % 3 == 2}
            - if i % 3 == 2
              .clear.stacked &nbsp;
      .column.span-12
        = render :partial => "comments/comments", :object => @observation_field
