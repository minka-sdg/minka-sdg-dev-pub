- content_for(:title) do
  - if is_me? @contributor.user
    =t :your_contributions_to_project, project_title: @project.title
  - else
    = strip_tags t(:users_contributions_to_project_html, 
      login: @contributor.user.login, 
      url: person_url(@contributor.user.login), 
      project_title: @project.title)
- content_for(:extracss) do
  = stylesheet_link_tag "observations/filters"
  :css
    .observations.medium.grid .observation, .observations.medium.grid .photos, .observations.medium.grid .icon {
      width: 172px;
      height: 172px;
    }
- content_for(:extrajs) do
  = google_maps_js
  = javascript_include_tag 'map_bundle'
#pageheader.column.span-24
  .breadcrumbs
    %strong= link_to "&laquo #{h @project.title}".html_safe, @project, :class => 'crumb'
  %h2
    - if is_me? @contributor.user
      =t :your_contributions_to_project, project_title: truncate(@project.title.html_safe, :length => 55)
    - else
      =t :users_contributions_to_project_html, 
        login: @contributor.user.login,
        url: person_url(@contributor.user.login),
        project_title: truncate(@project.title, :length => 55)
.column.span-18
  #observations
    - if @project_observations.blank? && @observations.blank?
      .description.noresults
        = link_to @contributor.user.login, observations_path( user_id: @contributor.user.login )
        = t(:hasnt_contributed_any_observations)
    - else
      .stacked.observationcontrols
      .medium.observations.grid
        - compact do
          = render :partial => "observations/cached_component",
            :collection => @project_observations ? @project_observations.map{|po| po.observation}.compact : @observations
      :javascript
        $('.observationcontrols').observationControls('medium')
      = will_paginate @project_observations || @observations, :renderer => INatLinkRenderer
.last.column.span-6
  .stacked
    %h3=t :stats
    %ul.meta
      - if @project.is_new_project?
        %li= t :x_observations_html, count: number_with_delimiter(@observations.total_entries)
      - else
        %li= t :x_taxa_observed_html, :count => number_with_delimiter(@contributor.taxa_count)
        %li= t :x_observations_html, count: number_with_delimiter(@contributor.observations_count)
        %li= t :x_research_grade_observations_html, :count => number_with_delimiter(@research_grade_count)
        %li= t :x_research_grade_observations_to_species_html, :count => number_with_delimiter(@research_grade_species_count)
  - if is_me?(@contributor.user)
    .stacked
      %h3= t(:settings, default: 'Settings').capitalize
      = form_for @contributor, 
          builder: DefaultFormBuilder,
          remote: true,
          data: {format: :json} do |f|
        = f.hidden_field :project_id
        = f.hidden_field :user_id
        = f.check_box :preferred_updates, 
          label_after: true, 
          label: t(:receive_updates_from_this_project), 
          description: t('views.projects.updates_desc'),
          data: {autosubmit: true}
        %label{ class: @project.is_new_project? ? "disabled" : nil }
          =t 'views.projects.curator_coordinate_access_label'
        - if @project.is_new_project?
          = f.form_field t(:trust_this_project_with_your_private_coordinates?), description: t(:about_trusting_projects_overview) do
            = f.radio_button :prefers_curator_coordinate_access_for, ProjectUser::CURATOR_COORDINATE_ACCESS_FOR_NONE,
              label_after: true,
              label: t(:no),
              data: { autosubmit: true }
            = f.radio_button :prefers_curator_coordinate_access_for, ProjectUser::CURATOR_COORDINATE_ACCESS_FOR_ANY,
              label_after: true,
              label: t(:yes_for_any_of_my_observations),
              description: t(:about_trusting_projects_options_any_desc),
              data: { autosubmit: true }
            = f.radio_button :prefers_curator_coordinate_access_for, ProjectUser::CURATOR_COORDINATE_ACCESS_FOR_TAXON,
              label_after: true,
              label: t(:yes_but_only_for_threatened),
              description: t(:about_trusting_projects_options_taxon_desc),
              data: { autosubmit: true }
        - else
          - [ProjectUser::CURATOR_COORDINATE_ACCESS_ANY, ProjectUser::CURATOR_COORDINATE_ACCESS_OBSERVER, ProjectUser::CURATOR_COORDINATE_ACCESS_NONE].each do |option|
            = f.radio_button :preferred_curator_coordinate_access, option,
              label_after: true,
              label: t("views.projects.project_user_curator_coordinate_access_labels.#{option}"),
              data: {autosubmit: true}
      %br
      = link_to t(:leave_this_project) , confirm_leave_project_path(@project), 'class': "ui description"

